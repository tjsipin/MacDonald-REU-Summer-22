'te_forest', 'enn_mn_forest','Population')) %>%
mutate(Population = as.integer(Population))
data_res <- data %>%
bind_cols(predict(model_st_40,.))
table((aad_new %>% filter(Year %in% c(2018, 2019)))$Cutaneous.Leishmaniasis)
table(aad_new$Cutaneous.Leishmaniasis)
table(data_res$.pred_class)
load('../../extrapolation/projected_input_48m')
data <- test_rwf_df_48 %>%
select(c('LST_Day', 'Year',
'NDVI', 'EVI', 'Precip',
'AvgRad', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population')) %>%
mutate(Population = as.integer(Population))
data_res <- data %>%
bind_cols(predict(model_st_40,.))
table((aad_new %>% filter(Year %in% c(2018, 2019)))$Cutaneous.Leishmaniasis)
table(aad_new$Cutaneous.Leishmaniasis)
table(data_res$.pred_class)
load('../../extrapolation/projected_input_60m')
data <- test_rwf_df_60 %>%
select(c('LST_Day', 'Year',
'NDVI', 'EVI', 'Precip',
'AvgRad', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population')) %>%
mutate(Population = as.integer(Population))
data_res <- data %>%
bind_cols(predict(model_st_40,.))
table((aad_new %>% filter(Year %in% c(2018, 2019)))$Cutaneous.Leishmaniasis)
table(aad_new$Cutaneous.Leishmaniasis)
table(data_res$.pred_class)
load('../../extrapolation/projected_input_60m')
data <- test_rwf_df_60 %>%
select(c('LST_Day', 'Year',
'NDVI', 'EVI', 'Precip',
'AvgRad', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population')) %>%
mutate(Population = as.integer(Population))
data_res <- data %>%
bind_cols(predict(model_st_40,.))
table(aad_new$Cutaneous.Leishmaniasis)
table((aad_new %>% filter(Year %in% c(2018, 2019)))$Cutaneous.Leishmaniasis)
table(data_res$.pred_class)
knitr::opts_chunk$set(echo = T,
cache = F,
eval = T,
results = 'show',
warning = F,
message = F)
write.csv(monthly_short, file = '../../data/monthly_short.csv')
# TODO: get 2019 levels to match all other years
# remove 2019 new_aad from total_data
monthly_short <- monthly %>%
filter(Year > 2013) %>%
filter(!is.na(LST_Day)) %>%
filter(!is.na(AvgRad)) %>%
filter(!is.na(EVI)) %>%
filter(!is.na(NDVI)) %>%
filter(!is.na(Precip)) %>%
filter(!is.na(SWOccurrence)) %>%
mutate(Month = (Year - 2014)*12 + Month) %>%
select(c(Name, Code, Year, Month,
Population, LST_Day,
NDVI, EVI, Precip,
AvgRad, SWOccurrence,
pland_forest, area_mn_forest,
enn_mn_forest, te_forest)) %>%
mutate(pland_forest = ifelse(is.na(pland_forest), 0,
pland_forest)) %>%
mutate(area_mn_forest = ifelse(is.na(area_mn_forest), 0,
area_mn_forest)) %>%
mutate(enn_mn_forest = ifelse(is.na(enn_mn_forest), 0,
enn_mn_forest)) %>%
mutate(te_forest = ifelse(is.na(te_forest), 0,
te_forest)) %>%
mutate(Code = sub("^0+", "", Code) %>% as.integer())
set.seed(123)
library(readr)
library(tidyverse)
library(tidymodels)
library(stacks)
library(dplyr)
library(caret)
library(kernlab)
# load model
load('model_stacks/FINAL_model_st_later_CL_classif_40')
load('data_tests/FINAL_data_test_later_CL_classif_40')
aad <- read_csv('../../models/data/aad.csv')
monthly <- read_csv('../../data/monthly_df.csv')
set.seed(123)
library(readr)
library(tidyverse)
library(tidymodels)
library(stacks)
library(dplyr)
library(caret)
library(kernlab)
# load model
load('model_stacks/FINAL_model_st_later_CL_classif_40')
load('data_tests/FINAL_data_test_later_CL_classif_40')
aad <- read_csv('../../models/data/aad.csv')
monthly <- read_csv('../../data/monthly_df.csv')
monthly_short <- monthly %>%
filter(Year > 2013) %>%
filter(!is.na(LST_Day)) %>%
filter(!is.na(AvgRad)) %>%
filter(!is.na(EVI)) %>%
filter(!is.na(NDVI)) %>%
filter(!is.na(Precip)) %>%
filter(!is.na(SWOccurrence)) %>%
mutate(Month = (Year - 2014)*12 + Month) %>%
select(c(Name, Code, Year, Month,
Population, LST_Day,
NDVI, EVI, Precip,
AvgRad, SWOccurrence,
pland_forest, area_mn_forest,
enn_mn_forest, te_forest)) %>%
mutate(pland_forest = ifelse(is.na(pland_forest), 0,
pland_forest)) %>%
mutate(area_mn_forest = ifelse(is.na(area_mn_forest), 0,
area_mn_forest)) %>%
mutate(enn_mn_forest = ifelse(is.na(enn_mn_forest), 0,
enn_mn_forest)) %>%
mutate(te_forest = ifelse(is.na(te_forest), 0,
te_forest)) %>%
mutate(Code = sub("^0+", "", Code) %>% as.integer())
write.csv(monthly_short, file = '../../data/monthly_short.csv')
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv('../data/monthly_short.csv')
library(randomForest)
data <- read_csv('../data/monthly_short.csv')
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(finalfit)
library(dplyr)
library(naniar)
library(ggplot2)
monthly <- read_csv('data/monthly_df.csv')
monthly <- read_csv('../data/monthly_df.csv')
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(finalfit)
library(dplyr)
library(naniar)
library(ggplot2)
monthly <- read_csv('../data/monthly_df.csv')
aad <- read_csv('models/data/aad.csv')
aad <- read_csv('../models/data/aad.csv')
quantile_data <- monthly_df %>%
filter(!is.na(Cutaneous.Leishmaniasis)) %>%
filter(Cutaneous.Leishmaniasis > 0) %>%
select(Cutaneous.Leishmaniasis)
quantile <- (quantile_data$Cutaneous.Leishmaniasis %>%
quantile(.4))[[1]]
monthly_df <- monthly %>%
rename('Cutaneous.Leishmaniasis' = 'Cutaneous Leishmaniasis') %>%
group_by('Year') %>%
select(c('LST_Day', 'Year', # include LST_Night?
'NDVI', 'EVI', 'Precip',
'AvgRad', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest', 'area_mn_forest', 'Population',
'Cutaneous.Leishmaniasis')) %>%
mutate(Cutaneous.Leishmaniasis.fct = ifelse(Cutaneous.Leishmaniasis < quantile, 'low', 'high') %>% as.factor)
# missing_plot(monthly)
monthly %>%
group_by(Year) %>%
summary()
ggplot(monthly_df,
aes(x = te_forest,
y = Cutaneous.Leishmaniasis)) +
geom_miss_point() +
facet_wrap(~ Year) +
theme_dark()
gg_miss_var(monthly_df,
facet = Year,
show_pct = T)
library(ggplot2)
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
data <- read_csv('../data/monthly_short.csv')
data %>% summary()
data
data %>% colnmaes
data %>% colnames
data <- data %>%
mutate(...1 <- NaN)
data
data <- data %>%
mutate(...1 <- NA)
data
data <- data %>%
mutate('...1' <- NA)
data
data <- read_csv('../data/monthly_short.csv')
data <- data %>%
select(-c(...1))
data
data <- read_csv('../data/monthly_short.csv')
data %>% summary
data <- data %>%
select(-c(...1))
data %>% summary
# remove unnecessary row counter
data <- data %>%
select(-c(...1))
data %>% summary
gg_miss_var(monthly_df,
facet = Year,
show_pct = T)
gg_miss_var(data,
facet = Year,
show_pct = T)
# TODO: get 2019 levels to match all other years
# remove 2019 new_aad from total_data
monthly_short <- monthly %>%
filter(Year > 2013) %>%
filter(!is.na(LST_Day)) %>%
filter(!is.na(AvgRad)) %>%
filter(!is.na(EVI)) %>%
filter(!is.na(NDVI)) %>%
filter(!is.na(Precip)) %>%
filter(!is.na(SWOccurrence)) %>%
mutate(Month = (Year - 2014)*12 + Month) %>%
select(c(Name, Code, Year, Month,
`Cutaneous Leishmaniasis`,
Population, LST_Day,
NDVI, EVI, Precip,
AvgRad, SWOccurrence,
pland_forest, area_mn_forest,
enn_mn_forest, te_forest)) %>%
mutate(pland_forest = ifelse(is.na(pland_forest), 0,
pland_forest)) %>%
mutate(area_mn_forest = ifelse(is.na(area_mn_forest), 0,
area_mn_forest)) %>%
mutate(enn_mn_forest = ifelse(is.na(enn_mn_forest), 0,
enn_mn_forest)) %>%
mutate(te_forest = ifelse(is.na(te_forest), 0,
te_forest)) %>%
mutate(Code = sub("^0+", "", Code) %>% as.integer())
write.csv(monthly_short, file = '../../data/monthly_short.csv')
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
data <- data %>%
select(-c(...1))
data %>% summary
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017))
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017))
data %>% summary
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
mutate(`Cutaneous Leishmaniasis` = CL)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
mutate(`Cutaneous Leishmaniasis` = CL)
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
rename(`Cutaneous Leishmaniasis` = CL)
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
rename(CL = `Cutaneous Leishmaniasis`)
data %>% summary
lm_fit <- lm(
CL ~ .,
data = data
)
data %>% dim
quantile_data <- data %>%
filter(CL > 0) %>%
select(CL)
quantile <- (quantile_data$CL %>%
quantile(.4))[[1]]
?case_when
data <- data %>%
mutate(CL <- case_when(CL < quantile ~ 'low',
CL >= quantile ~ 'high'))
data
aad %>% head
y = 'Cutaneous.Leishmaniasis"))
y = 'Cutaneous.Leishmaniasis')
```{r}
y = Cutaneous.Leishmaniasis)
ggplot(aad) +
geom_point(aes(x = Population,
y = Cutaneous.Leishmaniasis))
ggplot(aad) +
geom_point(aes(x = Population,
y = Cutaneous.Leishmaniasis,
color = StableLights))
ggplot(aad) +
geom_point(aes(x = Population,
y = log(Cutaneous.Leishmaniasis),
color = StableLights))
ggplot(aad) +
geom_point(aes(x = Population,
y = log(Cutaneous.Leishmaniasis),
color = StableLights),
alpha = 0.3)
ggplot(aad) +
geom_point(aes(x = log(Population),
y = (Cutaneous.Leishmaniasis),
color = StableLights),
alpha = 0.3)
ggplot(aad) +
geom_point(aes(x = (Population),
y = (Cutaneous.Leishmaniasis),
color = StableLights),
alpha = 0.3)
library(rsplit)
library(tidyverse)
split <- initial_split(data)
?initial_split
split <- initial_split(data, strata = CL)
set.seed(123)
split <- initial_split(data, strata = CL)
training <- training(split)
testing <- testing(split)
?randomForest
?train
rf_default <- train(CL ~ ., data = data, method = 'rf',
metric = 'Sensitivity')
rf_default <- train(CL ~ ., data = data, method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
set.seed(123)
# split <- initial_split(data, strata = CL) # CL used for stratified sampling
# training <- training(split)
# testing <- testing(split)
# rf <- randomForest(CL ~ ., data = train, proximity = T)
# Create model with default parameters
control <- trainControl(method = 'repeatedcv',
number = 10,
repeats = 3)
tunegrid <- expand.grid(.mtry = sqrt(ncol(data %>% select(-c(CL)))))
rf_default <- train(CL ~ ., data = data, method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
rf_default <- train(CL ~ ., data = data %>% sample(size = 10_000), method = 'rf',
set.seed(123)
# split <- initial_split(data, strata = CL) # CL used for stratified sampling
# training <- training(split)
# testing <- testing(split)
# rf <- randomForest(CL ~ ., data = train, proximity = T)
# Create model with default parameters
control <- trainControl(method = 'repeatedcv',
number = 10,
repeats = 3)
tunegrid <- expand.grid(.mtry = sqrt(ncol(data %>% select(-c(CL)))))
rf_default <- train(CL ~ ., data = data %>% sample(size = 10000), method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
data %>% dim
rf_default <- train(CL ~ ., data = data %>% sample(length = 10000), method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
rf_default <- train(CL ~ ., data = data %>% sample(10000), method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
rsample
?sample
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
library(tidyverse)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
rename(CL = `Cutaneous Leishmaniasis`)
data %>% summary
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
library(tidyverse)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
rename(CL = `Cutaneous Leishmaniasis`)
data %>% summary
quantile_data <- data %>%
filter(CL > 0) %>%
select(CL)
quantile <- (quantile_data$CL %>%
quantile(.4))[[1]]
data <- data %>%
mutate(CL <- case_when(CL < quantile ~ 'low',
CL >= quantile ~ 'high'))
set.seed(123)
# split <- initial_split(data, strata = CL) # CL used for stratified sampling
# training <- training(split)
# testing <- testing(split)
# rf <- randomForest(CL ~ ., data = train, proximity = T)
# Create model with default parameters
control <- trainControl(method = 'repeatedcv',
number = 10,
repeats = 3,
search = 'random')
tunegrid <- expand.grid(.mtry = sqrt(ncol(data %>% select(-c(CL)))))
rf_random <- train(CL ~ ., data = , method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
set.seed(123)
# split <- initial_split(data, strata = CL) # CL used for stratified sampling
# training <- training(split)
# testing <- testing(split)
# rf <- randomForest(CL ~ ., data = train, proximity = T)
# Create model with default parameters
control <- trainControl(method = 'repeatedcv',
number = 10,
repeats = 3,
search = 'random')
tunegrid <- expand.grid(.mtry = sqrt(ncol(data %>% select(-c(CL)))))
rf_random <- train(CL ~ ., data = data, method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
rf_random <- train(CL ~ ., data = data, method = 'rf',
metric = 'Sensitivity',
tuneGrid =  tunegrid,
trControl = control)
knitr::opts_chunk$set(echo = TRUE)
library(randomForest)
library(ggplot2)
library(finalfit)
library(dplyr)
library(naniar)
library(readr)
library(tidyverse)
library(caret)
library(readr)
library(dplyr)
library(mlbench)
library(rsample)
data <- read_csv('../data/monthly_short.csv')
# remove unnecessary row counter
# data <- data %>%
#   select(-c(...1)) %>%
#   filter(Year %in% c(2014, 2015, 2016, 2017)) %>%
#   rename(CL = `Cutaneous Leishmaniasis`)
data <- data %>%
select(-c(...1)) %>%
filter(Year %in% c(2014)) %>%
rename(CL = `Cutaneous Leishmaniasis`)
data %>% summary
set.seed(123)
# data_sample <- sample_n(data, size = nrow(data) * 0.7)
split <- initial_split(data, prop = 0.7)
train <- training(split) %>% as.data.frame()
test <- testing(split)
x_train <- train[, c(1:4, 6:16)]
y_train <- train[, 5]
rf <- randomForest(CL ~ ., data = train,
mtry = 4, importance = T, localImp = T)
rf
plot(rf)
rf; plot(rf)
rf %>% partialPlot()
rf %>% partialPlot(x.var = CL)
rf %>% partialPlot(x.var = CL,
pred.data = training)
rf %>% partialPlot(x.var = CL,
pred.data = train)
rf %>% partialPlot(x.var = Population,
pred.data = train)
population_vs_CL_pP <- rf %>% partialPlot(x.var = Population,
pred.data = train)
