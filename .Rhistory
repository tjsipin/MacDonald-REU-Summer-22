getwd()
getwd()
getwd()
getwd()
library(finalfit)
library(tidyverse)
library(dplyr)
early_aad <- aad %>%
filter(Year < 2014) %>%
filter(!is.na(Cutaneous.Leishmaniasis)) %>%
filter(Cutaneous.Leishmaniasis > 0) %>%
dplyr::select(c('Cutaneous.Leishmaniasis', 'LST_Day', # include LST_Night?
'NDVI', 'EVI', 'Precip',
'StableLights', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population'))
aad <- read_csv('./models/data/aad.csv')
early_aad <- aad %>%
filter(Year < 2014) %>%
filter(!is.na(Cutaneous.Leishmaniasis)) %>%
filter(Cutaneous.Leishmaniasis > 0) %>%
dplyr::select(c('Cutaneous.Leishmaniasis', 'LST_Day', # include LST_Night?
'NDVI', 'EVI', 'Precip',
'StableLights', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population'))
cl_aad <- aad %>%
select(-c(Chikungunya,
Dengue,
Malaria,
Mucosal.Leishmaniasis,
Visceral.Leishmaniasis,
Yellow.Fever,
Zika)) %>%
group_by(Country)
missing_plot(cl_aad,
dependent = 'Cutaneous.Leishmaniasis',
explanatory = c('LST_Day', # include LST_Night?
'NDVI', 'EVI', 'Precip',
'StableLights', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population'))
monthly <- read_csv(file = './data/monthly_df.csv')
library(PRROC) # ROC curves in data frames
library(tidyverse) # everything
library(visdat) # missingness plots
library(doParallel) # parallel missForest
library(doRNG) # reproducible parallel results
library(gridExtra) # combining graphs
library(randomForest) # random forests
library(missForest) # ...
library(kableExtra) # pretty tables
library(ggplot2)
library(ggfortify)
library(forecast)
theme_set(theme_light()) # ggplot theme
aad <- read_csv('../models/data/aad.csv')
load('../data/imp')
load("~/Documents/Work/MacDonald_REU/MacDonald-REU-Summer-22-1/CopyOfstacked_early_CL_classif_ROCAUC_cache/html/40th percentile, _84815e2050c2f6c8f0ca9e8c50c2fc55.RData")
load("~/Documents/Work/MacDonald_REU/MacDonald-REU-Summer-22-1/CopyOfstacked_early_CL_classif_ROCAUC_cache/html/40th percentile, _84815e2050c2f6c8f0ca9e8c50c2fc55.RData")
knitr::opts_chunk$set(echo = T, cache = T, eval = F, results = 'show')
load(file = 'models/stacking/data_test_early_CL_classif_30')
load(file = 'models/stacking/data_test_early_CL_classif_40')
load(file = 'models/stacking/data_test_early_CL_classif_50')
load(file = 'models/stacking/data_test_early_CL_classif_60')
load(file = 'models/stacking/data_test_early_CL_classif_70')
roc_30 <- roc(data_test_30$Cutaneous.Leishmaniasis,
data_test_30$.pred_class %>% as.numeric(),
print.auc = T)
library(tidyverse)
library(pROC)
library(dplyr)
library(ggplot2)
library(plotROC)
load(file = 'models/stacking/data_test_early_CL_classif_30')
load(file = 'models/stacking/data_test_early_CL_classif_40')
load(file = 'models/stacking/data_test_early_CL_classif_50')
load(file = 'models/stacking/data_test_early_CL_classif_60')
load(file = 'models/stacking/data_test_early_CL_classif_70')
roc_30 <- roc(data_test_30$Cutaneous.Leishmaniasis,
data_test_30$.pred_class %>% as.numeric(),
print.auc = T)
roc_40 <- roc(data_test_40$Cutaneous.Leishmaniasis,
data_test_40$.pred_class %>% as.ordered(),
print.auc = T)
roc_30 <- roc(data_test_30$Cutaneous.Leishmaniasis,
data_test_30$.pred_class %>% as.numeric(),
print.auc = T)
data_test_30 %>% naems
data_test_30 %>% names
load(file = 'models/stacking/svm_res_early_CL_classif_30')
load(file = 'models/stacking/xgb_res_early_CL_classif_30')
load(file = 'models/stacking/rf_res_early_CL_classif_30')
load(file = 'models/stacking/nb_res_early_CL_classif_30')
data_st_30 <-
stacks() %>%
add_candidates(xgb_res) %>%
add_candidates(rf_res) %>%
add_candidates(svm_res) %>%
add_candidates(nb_res)
set.seed(123)
library(tidyverse)
library(tidymodels)
library(stacks)
load('./data/imp')
set.seed(123) # for reproducibility
split <- initial_split(data)
data_train <- training(split)
data_test_30 <- testing(split)
# use a 5-fold cross-validation
folds <- rsample::vfold_cv(data_train,
v = 5,
strata = Cutaneous.Leishmaniasis)
# load and split the early data using imputed data
quantile_data <- data %>%
filter(!is.na(Cutaneous.Leishmaniasis)) %>%
filter(Cutaneous.Leishmaniasis > 0) %>%
dplyr::select(Cutaneous.Leishmaniasis)
quantile <- (quantile_data$Cutaneous.Leishmaniasis %>%
quantile(0.3))[[1]] # PARAMETER
data <- data %>%
filter(Year < 2014) %>%
filter(!is.na(Cutaneous.Leishmaniasis)) %>%
filter(Cutaneous.Leishmaniasis > 0) %>%
dplyr::select(c('Cutaneous.Leishmaniasis', 'LST_Day', # include LST_Night?
'NDVI', 'EVI', 'Precip',
'StableLights', 'SWOccurrence', 'pland_forest',
'te_forest', 'enn_mn_forest','Population'))
data$pland_forest <- ifelse(is.na(data$pland_forest), 0, data$pland_forest)
data$te_forest <- ifelse(is.na(data$te_forest), 0, data$te_forest)
data$enn_mn_forest <- ifelse(is.na(data$enn_mn_forest), 0, data$enn_mn_forest)
data$Cutaneous.Leishmaniasis <- as.factor(ifelse(data$Cutaneous.Leishmaniasis < quantile, 0, 1))
set.seed(123) # for reproducibility
split <- initial_split(data)
data_train <- training(split)
data_test_30 <- testing(split)
# use a 5-fold cross-validation
folds <- rsample::vfold_cv(data_train,
v = 5,
strata = Cutaneous.Leishmaniasis)
load(file = 'models/stacking/svm_res_early_CL_classif_30')
load(file = 'models/stacking/xgb_res_early_CL_classif_30')
load(file = 'models/stacking/rf_res_early_CL_classif_30')
load(file = 'models/stacking/nb_res_early_CL_classif_30')
data_st_30 <-
stacks() %>%
add_candidates(xgb_res) %>%
add_candidates(rf_res) %>%
add_candidates(svm_res) %>%
add_candidates(nb_res)
save(data_st_30, file = 'models/stacking/data_st_early_CL_classif_30')
# creating a model stack
## ready to evaluate how it is that we need to combine predictions from
## each candidate ensembe member
model_st_30 <-
data_st_30 %>%
blend_predictions()
model_st_30 <-
model_st_30 %>%
fit_members()
model_st_30 <-
model_st_30 %>%
fit_members()
model_st_30
load(file = 'models/stacking/svm_res_early_CL_classif_30')
load(file = 'models/stacking/xgb_res_early_CL_classif_30')
load(file = 'models/stacking/rf_res_early_CL_classif_30')
load(file = 'models/stacking/nb_res_early_CL_classif_30')
data_st_30 <-
stacks() %>%
add_candidates(xgb_res) %>%
add_candidates(rf_res) %>%
add_candidates(svm_res) %>%
add_candidates(nb_res)
save(data_st_30, file = 'models/stacking/data_st_early_CL_classif_30')
model_st_30 <-
data_st_30 %>%
blend_predictions()
model_st_30 <-
model_st_30 %>%
fit_members()
model_st_30
model_st_30 %>% fit_members()
# set up a basic recipe
data_rec <-
recipe(Cutaneous.Leishmaniasis ~ LST_Day + NDVI +
EVI + Precip + StableLights + SWOccurrence + pland_forest +
te_forest + enn_mn_forest + Population, data = data_train) %>%
step_dummy(all_nominal() - all_outcomes()) %>%
step_zv(all_predictors()) %>%
step_normalize(all_numeric())
# define a minimal workflow
data_wflow <-
workflow() %>%
add_recipe(data_rec)
# add metric
metric <- metric_set(sensitivity, accuracy)
# save assessment set predictions and workflow used to fit the resamples
ctrl_grid <- control_stack_grid()
ctrl_res <- control_stack_resamples()
data_st_30
data_st_30$Cutaneous.Leishmaniasis
data_st_30
model_st_30$splits
model_st_30
