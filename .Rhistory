}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i]
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i]
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
unique(monthly_short[,'Code'])[i]
unique(monthly_short[,'Code'])[i,]
h = 2 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
skip <- FALSE
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])) %>%
ts(start = 2000),
na.rm = TRUE,
lambda='auto',
h=10,
level=80,
drift=T,
bootstrap=T)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])) %>%
ts(start = 2000),
na.rm = TRUE,
lambda='auto',
h=10,
level=80,
drift=T,
bootstrap=T)$mean[j]
dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])) %>%
ts(start = 2000),
na.rm = TRUE,
lambda='auto',
h=10,
level=80,
drift=T,
bootstrap=T)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()
)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer())
h = 2 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
skip <- FALSE
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])) %>%
ts(start = 1),
na.rm = TRUE,
lambda='auto',
h=10,
level=80,
drift=T,
bootstrap=T)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)$mean[j]
dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k])),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[k]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[2]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[5]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer())
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(LST_Day)
(colnames(monthly_short)[5])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[5]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(c(colnames(monthly_short)[5,]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
dplyr::select(c(colnames(monthly_short)[5]))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer())
i
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer())
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short))
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[5])
colnames(monthly_short)[5]
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[5])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(Population)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[6])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(LST_Day)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[k])
k
5:(colnames(monthly_short) %>% length)
type(k)
typeof(k)
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[k,])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[[k]])
k
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[[11]])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[k])
k = 5
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[5])
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[k])
k = 6
monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[1,] %>% as.integer()) %>%
select(colnames(monthly_short)[k])
h = 2 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select((colnames(monthly_short)[k])),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select((colnames(monthly_short)[k])),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k %>% as.integer()]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 100, level = 95)$mean[j]
fit_dynrmf <- dynrmf(monthly_short %>%
filter(Code == sample(monthly_short$Code %>%
unique(), 1)) %>%
select(LST_Day),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 2, level = 95)
fit_dynrmf$mean
h = 2 # param
h = 2 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
h = 100 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
knitr::opts_chunk$set(echo = TRUE)
library(ahead)
library(datasets)
library(randomForest)
library(e1071)
library(tidyverse)
sessionInfo()
monthly <- read_csv('../data/monthly_df.csv')
monthly_short <- monthly %>%
filter(Year > 2013) %>%
filter(!is.na(LST_Day)) %>%
filter(!is.na(AvgRad)) %>%
filter(!is.na(EVI)) %>%
filter(!is.na(NDVI)) %>%
filter(!is.na(Precip)) %>%
filter(!is.na(SWOccurrence)) %>%
mutate(Month = (Year - 2014)*12 + Month) %>%
select(c(Name, Code, Year, Month,
Population, LST_Day,
NDVI, EVI, Precip,
AvgRad, SWOccurrence,
pland_forest, area_mn_forest,
te_forest)) %>%
mutate(pland_forest = ifelse(is.na(pland_forest), 0,
pland_forest)) %>%
mutate(area_mn_forest = ifelse(is.na(area_mn_forest), 0,
area_mn_forest)) %>%
mutate(te_forest = ifelse(is.na(te_forest), 0,
te_forest)) %>%
mutate(Code = sub("^0+", "", Code))
fit_dynrmf <- dynrmf(monthly_short %>%
filter(Code == sample(monthly_short$Code %>%
unique(), 1)) %>%
select(LST_Day),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 2, level = 95)
fit_dynrmf$mean
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
fit_dynrmf <- dynrmf(monthly_short %>%
filter(Code == 10101) %>%
select(LST_Day),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 2, level = 95)
fit_dynrmf$mean
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j]
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
i
j
k
colnames(monthly_short)[k]
fit_dynrmf <- dynrmf(monthly_short %>%
filter(Code == 10101) %>%
select(SWOccurrence),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = 2, level = 95)
dynrmf(monthly_short %>%
filter(Code == 10101) %>%
select(SWOccurrence),
fit_func = svm,
fit_params = list(kernel = 'linear'),
predict_func = predict,
h = 2, level = 95)
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% length)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
skip <- FALSE
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j] %>%
tryCatch(error = function(e){ skip <- TRUE })
if(skip) {
forecasted_dynrmf[(i-1)*h + j, k] = mean(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]))
}
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
colnames(forecasted_dynrmf) <- monthly_short %>% colnames
forecasted_dynrmf
(unique(monthly_short[,'Code']) %>% length)
monthly_short
monthly_short[,'Code']
monthly_short[,'Code'] %>% unique
colnames(monthly_short) %>% length)
colnames(monthly_short) %>% length
h = 10 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% nrow)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
skip <- FALSE
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j] %>%
tryCatch(error = function(e){ skip <- TRUE })
if(skip) {
forecasted_dynrmf[(i-1)*h + j, k] = mean(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]))
}
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
colnames(forecasted_dynrmf) <- monthly_short %>% colnames
h = 3 # param
forecasted_dynrmf <- data.frame(matrix(ncol = ncol(monthly_short),
nrow = 0))
for (i in 1:(unique(monthly_short[,'Code']) %>% nrow)){ # 1:8554
for(j in 1:h) { # 1:10
for (k in 5:(colnames(monthly_short) %>% length)) { # 5:14
skip <- FALSE
forecasted_dynrmf[(i-1)*h + j, k] = dynrmf(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]),
fit_func = randomForest,
fit_params = list(ntree = 50),
predict_func = predict,
h = h, level = 95)$mean[j] %>%
tryCatch(error = function(e){ skip <- TRUE })
if(skip) {
forecasted_dynrmf[(i-1)*h + j, k] = mean(monthly_short %>%
filter(Code == unique(monthly_short[,'Code'])[i,] %>% as.integer()) %>%
select(colnames(monthly_short)[k]))
}
}
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,] %>% as.integer()
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
colnames(forecasted_dynrmf) <- monthly_short %>% colnames
forecasted_dynrmf
save(forecasted_dynrmf, 'forecasted_dynrmf')
save(forecasted_dynrmf, file = 'forecasted_dynrmf')
j//12
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j\\12
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%/%12
for (i in 1:(unique(monthly_short[,'Code']) %>% nrow)){ # 1:8554
for(j in 1:h) { # 1:10
forecasted_dynrmf[(i-1)*h + j, 1] = unique(monthly_short[,'Name'])[i,]
forecasted_dynrmf[(i-1)*h + j, 2] = unique(monthly_short[,'Code'])[i,]
forecasted_dynrmf[(i-1)*h + j, 3] = 2020 + j%/%12
forecasted_dynrmf[(i-1)*h + j, 3] = j
}
}
