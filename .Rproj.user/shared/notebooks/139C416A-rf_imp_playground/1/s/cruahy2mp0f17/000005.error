{"frames":[{"func":"rwf(test_data_3 %>% filter(Code == unique(test_data_3[, \"Code\"])[i]) %>% \n    select(c(colnames(test_data_3)[k])) %>% ts(start = 2000), \n    na.rm = TRUE, lambda = \"auto\", h = 10, level = 80, drift = T, \n    bootstrap = T)$mean[j] %>% tryCatch(error = function(e) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(., error = function(e) {\n    skip <- TRUE\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rwf(test_data_3 %>% filter(Code == unique(test_data_3[, \"Code\"])[i]) %>% \n    select(c(colnames(test_data_3)[k])) %>% ts(start = 2000), \n    na.rm = TRUE, lambda = \"auto\", h = 10, level = 80, drift = T, \n    bootstrap = T)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"forecast(fit, h = h, level = level, fan = fan, lambda = fit$lambda, \n    biasadj = biasadj, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"forecast.lagwalk(fit, h = h, level = level, fan = fan, lambda = fit$lambda, \n    biasadj = biasadj, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"simulate(object, nsim = h, bootstrap = bootstrap, lambda = lambda)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"simulate.lagwalk(object, nsim = h, bootstrap = bootstrap, lambda = lambda)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"unsplit(lapply(e, cumsum), lag_grp)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`split<-`(`*tmp*`, f, drop = drop, value = value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`split<-.default`(`*tmp*`, f, drop = drop, value = value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"missing values and NaN's not allowed if 'na.rm' is FALSE"}